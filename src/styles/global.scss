@import '_reset';

$black: #0E0F0E;
$white:#CCCCCC;
$background: $black;
$color: rgba(black,0.9);
$primary: #04B27E;
$min-padding : 16px;

$breakpoints: (
  'small':  767px,
  'medium': 992px,
  'large':  1200px
) !default;

@mixin respond-to($breakpoint){
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }
 
  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}
@font-face {
  font-family: Rubik;
  font-weight: 500;
}
.material-icons {
  font-family: 'Material Icons';
  font-weight: normal;
  font-style: normal;
  font-size: 24px;  /* Preferred icon size */
  display: inline-block;
  line-height: 1;
  text-transform: none;
  letter-spacing: normal;
  word-wrap: normal;
  white-space: nowrap;
  direction: ltr;

  /* Support for all WebKit browsers. */
  -webkit-font-smoothing: antialiased;
  /* Support for Safari and Chrome. */
  text-rendering: optimizeLegibility;

  /* Support for Firefox. */
  -moz-osx-font-smoothing: grayscale;

  /* Support for IE. */
  font-feature-settings: 'liga';
}
:root{
    --primary-color: $primary;
    --white: $white;
}
*:after,
*:before{
    box-sizing: border-box;
}
body{
    background-color: $background;
    color: $color;
    margin: 0;
    width: 100vw;
    #app{
        .Header{
            position: relative;
            width: 100%;
            display: flex;
            flex-direction: column;
            height: auto;
            @include respond-to('small') {
            }
        }
    }
}

